// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/22/2019 22:31:53"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Memory
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Memory_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [15:0] Bus_In;
reg Clk;
reg Clk_View;
reg Load_MAR;
reg Load_MDR;
reg Memory_WE;
reg Reset;
reg [15:0] View_Address;
reg [15:0] View_Data;
reg View_WE;
// wires                                               
wire [15:0] Memory_Out;
wire [15:0] View_Out;

// assign statements (if any)                          
Memory i1 (
// port map - connection between master ports and signals/registers   
	.Bus_In(Bus_In),
	.Clk(Clk),
	.Clk_View(Clk_View),
	.Load_MAR(Load_MAR),
	.Load_MDR(Load_MDR),
	.Memory_Out(Memory_Out),
	.Memory_WE(Memory_WE),
	.Reset(Reset),
	.View_Address(View_Address),
	.View_Data(View_Data),
	.View_Out(View_Out),
	.View_WE(View_WE)
);
initial 
begin 
#1000000 $finish;
end 

// Reset
initial
begin
	Reset = 1'b0;
end 
// Bus_In[ 15 ]
initial
begin
	Bus_In[15] = 1'b1;
	Bus_In[15] = #40000 1'b0;
	Bus_In[15] = #40000 1'b1;
	Bus_In[15] = #80000 1'b0;
	Bus_In[15] = #100000 1'b1;
	Bus_In[15] = #20000 1'b0;
	Bus_In[15] = #40000 1'b1;
	Bus_In[15] = #60000 1'b0;
	Bus_In[15] = #40000 1'b1;
	Bus_In[15] = #20000 1'b0;
	Bus_In[15] = #60000 1'b1;
	Bus_In[15] = #20000 1'b0;
	Bus_In[15] = #20000 1'b1;
	Bus_In[15] = #80000 1'b0;
	Bus_In[15] = #60000 1'b1;
	Bus_In[15] = #40000 1'b0;
	Bus_In[15] = #20000 1'b1;
	Bus_In[15] = #100000 1'b0;
	Bus_In[15] = #20000 1'b1;
	Bus_In[15] = #20000 1'b0;
	Bus_In[15] = #40000 1'b1;
	Bus_In[15] = #40000 1'b0;
	Bus_In[15] = #20000 1'b1;
end 
// Bus_In[ 14 ]
initial
begin
	Bus_In[14] = 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #80000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #40000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #40000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #60000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #60000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #40000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #180000 1'b1;
	Bus_In[14] = #60000 1'b0;
	Bus_In[14] = #40000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #20000 1'b0;
	Bus_In[14] = #20000 1'b1;
	Bus_In[14] = #40000 1'b0;
end 
// Bus_In[ 13 ]
initial
begin
	Bus_In[13] = 1'b1;
	Bus_In[13] = #40000 1'b0;
	Bus_In[13] = #60000 1'b1;
	Bus_In[13] = #60000 1'b0;
	Bus_In[13] = #20000 1'b1;
	Bus_In[13] = #20000 1'b0;
	Bus_In[13] = #40000 1'b1;
	Bus_In[13] = #40000 1'b0;
	Bus_In[13] = #20000 1'b1;
	Bus_In[13] = #40000 1'b0;
	Bus_In[13] = #80000 1'b1;
	Bus_In[13] = #40000 1'b0;
	Bus_In[13] = #20000 1'b1;
	Bus_In[13] = #60000 1'b0;
	Bus_In[13] = #20000 1'b1;
	Bus_In[13] = #40000 1'b0;
	Bus_In[13] = #60000 1'b1;
	Bus_In[13] = #20000 1'b0;
	Bus_In[13] = #20000 1'b1;
	Bus_In[13] = #60000 1'b0;
	Bus_In[13] = #40000 1'b1;
	Bus_In[13] = #20000 1'b0;
	Bus_In[13] = #20000 1'b1;
	Bus_In[13] = #40000 1'b0;
	Bus_In[13] = #40000 1'b1;
	Bus_In[13] = #20000 1'b0;
	Bus_In[13] = #20000 1'b1;
	Bus_In[13] = #20000 1'b0;
end 
// Bus_In[ 12 ]
initial
begin
	Bus_In[12] = 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #40000 1'b1;
	Bus_In[12] = #60000 1'b0;
	Bus_In[12] = #40000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #40000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #20000 1'b1;
	Bus_In[12] = #80000 1'b0;
	Bus_In[12] = #20000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #20000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #20000 1'b1;
	Bus_In[12] = #80000 1'b0;
	Bus_In[12] = #20000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #40000 1'b1;
	Bus_In[12] = #60000 1'b0;
	Bus_In[12] = #20000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #20000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #40000 1'b1;
	Bus_In[12] = #20000 1'b0;
	Bus_In[12] = #60000 1'b1;
end 
// Bus_In[ 11 ]
initial
begin
	Bus_In[11] = 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #80000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #40000 1'b0;
	Bus_In[11] = #40000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #60000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #80000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #40000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #40000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #40000 1'b1;
	Bus_In[11] = #20000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #180000 1'b0;
	Bus_In[11] = #20000 1'b1;
	Bus_In[11] = #20000 1'b0;
end 
// Bus_In[ 10 ]
initial
begin
	Bus_In[10] = 1'b1;
	Bus_In[10] = #20000 1'b0;
	Bus_In[10] = #160000 1'b1;
	Bus_In[10] = #80000 1'b0;
	Bus_In[10] = #40000 1'b1;
	Bus_In[10] = #20000 1'b0;
	Bus_In[10] = #40000 1'b1;
	Bus_In[10] = #40000 1'b0;
	Bus_In[10] = #20000 1'b1;
	Bus_In[10] = #20000 1'b0;
	Bus_In[10] = #20000 1'b1;
	Bus_In[10] = #60000 1'b0;
	Bus_In[10] = #60000 1'b1;
	Bus_In[10] = #20000 1'b0;
	Bus_In[10] = #80000 1'b1;
	Bus_In[10] = #20000 1'b0;
	Bus_In[10] = #20000 1'b1;
	Bus_In[10] = #20000 1'b0;
	Bus_In[10] = #40000 1'b1;
	Bus_In[10] = #20000 1'b0;
	Bus_In[10] = #40000 1'b1;
	Bus_In[10] = #60000 1'b0;
	Bus_In[10] = #20000 1'b1;
end 
// Bus_In[ 9 ]
initial
begin
	Bus_In[9] = 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #20000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #60000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #60000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #20000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #20000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #20000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #40000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #20000 1'b1;
	Bus_In[9] = #100000 1'b0;
	Bus_In[9] = #20000 1'b1;
	Bus_In[9] = #20000 1'b0;
	Bus_In[9] = #20000 1'b1;
	Bus_In[9] = #100000 1'b0;
	Bus_In[9] = #40000 1'b1;
	Bus_In[9] = #60000 1'b0;
	Bus_In[9] = #40000 1'b1;
	Bus_In[9] = #60000 1'b0;
	Bus_In[9] = #80000 1'b1;
end 
// Bus_In[ 8 ]
initial
begin
	Bus_In[8] = 1'b1;
	Bus_In[8] = #20000 1'b0;
	Bus_In[8] = #20000 1'b1;
	Bus_In[8] = #80000 1'b0;
	Bus_In[8] = #40000 1'b1;
	Bus_In[8] = #40000 1'b0;
	Bus_In[8] = #80000 1'b1;
	Bus_In[8] = #80000 1'b0;
	Bus_In[8] = #80000 1'b1;
	Bus_In[8] = #20000 1'b0;
	Bus_In[8] = #20000 1'b1;
	Bus_In[8] = #20000 1'b0;
	Bus_In[8] = #40000 1'b1;
	Bus_In[8] = #40000 1'b0;
	Bus_In[8] = #80000 1'b1;
	Bus_In[8] = #20000 1'b0;
	Bus_In[8] = #20000 1'b1;
	Bus_In[8] = #20000 1'b0;
	Bus_In[8] = #60000 1'b1;
	Bus_In[8] = #20000 1'b0;
	Bus_In[8] = #40000 1'b1;
	Bus_In[8] = #20000 1'b0;
end 
// Bus_In[ 7 ]
initial
begin
	Bus_In[7] = 1'b1;
	Bus_In[7] = #20000 1'b0;
	Bus_In[7] = #20000 1'b1;
	Bus_In[7] = #40000 1'b0;
	Bus_In[7] = #20000 1'b1;
	Bus_In[7] = #80000 1'b0;
	Bus_In[7] = #20000 1'b1;
	Bus_In[7] = #20000 1'b0;
	Bus_In[7] = #20000 1'b1;
	Bus_In[7] = #60000 1'b0;
	Bus_In[7] = #100000 1'b1;
	Bus_In[7] = #60000 1'b0;
	Bus_In[7] = #20000 1'b1;
	Bus_In[7] = #40000 1'b0;
	Bus_In[7] = #40000 1'b1;
	Bus_In[7] = #20000 1'b0;
	Bus_In[7] = #120000 1'b1;
	Bus_In[7] = #20000 1'b0;
	Bus_In[7] = #40000 1'b1;
	Bus_In[7] = #40000 1'b0;
	Bus_In[7] = #20000 1'b1;
	Bus_In[7] = #20000 1'b0;
	Bus_In[7] = #60000 1'b1;
	Bus_In[7] = #60000 1'b0;
	Bus_In[7] = #20000 1'b1;
end 
// Bus_In[ 6 ]
initial
begin
	Bus_In[6] = 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #40000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #40000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #40000 1'b0;
	Bus_In[6] = #100000 1'b1;
	Bus_In[6] = #60000 1'b0;
	Bus_In[6] = #100000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #60000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #40000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #60000 1'b1;
	Bus_In[6] = #40000 1'b0;
	Bus_In[6] = #20000 1'b1;
	Bus_In[6] = #20000 1'b0;
	Bus_In[6] = #40000 1'b1;
	Bus_In[6] = #20000 1'b0;
end 
// Bus_In[ 5 ]
initial
begin
	Bus_In[5] = 1'b1;
	Bus_In[5] = #80000 1'b0;
	Bus_In[5] = #40000 1'b1;
	Bus_In[5] = #20000 1'b0;
	Bus_In[5] = #20000 1'b1;
	Bus_In[5] = #60000 1'b0;
	Bus_In[5] = #20000 1'b1;
	Bus_In[5] = #20000 1'b0;
	Bus_In[5] = #40000 1'b1;
	Bus_In[5] = #40000 1'b0;
	Bus_In[5] = #40000 1'b1;
	Bus_In[5] = #20000 1'b0;
	Bus_In[5] = #60000 1'b1;
	Bus_In[5] = #20000 1'b0;
	Bus_In[5] = #20000 1'b1;
	Bus_In[5] = #20000 1'b0;
	Bus_In[5] = #60000 1'b1;
	Bus_In[5] = #60000 1'b0;
	Bus_In[5] = #40000 1'b1;
	Bus_In[5] = #60000 1'b0;
	Bus_In[5] = #20000 1'b1;
	Bus_In[5] = #60000 1'b0;
	Bus_In[5] = #20000 1'b1;
	Bus_In[5] = #20000 1'b0;
	Bus_In[5] = #20000 1'b1;
	Bus_In[5] = #20000 1'b0;
	Bus_In[5] = #60000 1'b1;
end 
// Bus_In[ 4 ]
initial
begin
	Bus_In[4] = 1'b1;
	Bus_In[4] = #20000 1'b0;
	Bus_In[4] = #40000 1'b1;
	Bus_In[4] = #20000 1'b0;
	Bus_In[4] = #20000 1'b1;
	Bus_In[4] = #80000 1'b0;
	Bus_In[4] = #100000 1'b1;
	Bus_In[4] = #40000 1'b0;
	Bus_In[4] = #20000 1'b1;
	Bus_In[4] = #20000 1'b0;
	Bus_In[4] = #20000 1'b1;
	Bus_In[4] = #20000 1'b0;
	Bus_In[4] = #40000 1'b1;
	Bus_In[4] = #20000 1'b0;
	Bus_In[4] = #140000 1'b1;
	Bus_In[4] = #120000 1'b0;
	Bus_In[4] = #80000 1'b1;
	Bus_In[4] = #60000 1'b0;
	Bus_In[4] = #60000 1'b1;
	Bus_In[4] = #40000 1'b0;
	Bus_In[4] = #20000 1'b1;
end 
// Bus_In[ 3 ]
initial
begin
	Bus_In[3] = 1'b1;
	Bus_In[3] = #20000 1'b0;
	Bus_In[3] = #120000 1'b1;
	Bus_In[3] = #100000 1'b0;
	Bus_In[3] = #20000 1'b1;
	Bus_In[3] = #20000 1'b0;
	Bus_In[3] = #20000 1'b1;
	Bus_In[3] = #20000 1'b0;
	Bus_In[3] = #60000 1'b1;
	Bus_In[3] = #20000 1'b0;
	Bus_In[3] = #60000 1'b1;
	Bus_In[3] = #40000 1'b0;
	Bus_In[3] = #20000 1'b1;
	Bus_In[3] = #80000 1'b0;
	Bus_In[3] = #60000 1'b1;
	Bus_In[3] = #100000 1'b0;
	Bus_In[3] = #20000 1'b1;
	Bus_In[3] = #40000 1'b0;
end 
// Bus_In[ 2 ]
initial
begin
	Bus_In[2] = 1'b1;
	Bus_In[2] = #60000 1'b0;
	Bus_In[2] = #60000 1'b1;
	Bus_In[2] = #20000 1'b0;
	Bus_In[2] = #40000 1'b1;
	Bus_In[2] = #20000 1'b0;
	Bus_In[2] = #20000 1'b1;
	Bus_In[2] = #80000 1'b0;
	Bus_In[2] = #20000 1'b1;
	Bus_In[2] = #20000 1'b0;
	Bus_In[2] = #20000 1'b1;
	Bus_In[2] = #60000 1'b0;
	Bus_In[2] = #20000 1'b1;
	Bus_In[2] = #60000 1'b0;
	Bus_In[2] = #40000 1'b1;
	Bus_In[2] = #40000 1'b0;
	Bus_In[2] = #40000 1'b1;
	Bus_In[2] = #20000 1'b0;
	Bus_In[2] = #20000 1'b1;
	Bus_In[2] = #60000 1'b0;
	Bus_In[2] = #80000 1'b1;
	Bus_In[2] = #100000 1'b0;
	Bus_In[2] = #20000 1'b1;
	Bus_In[2] = #20000 1'b0;
	Bus_In[2] = #20000 1'b1;
end 
// Bus_In[ 1 ]
initial
begin
	Bus_In[1] = 1'b0;
	Bus_In[1] = #40000 1'b1;
	Bus_In[1] = #20000 1'b0;
	Bus_In[1] = #40000 1'b1;
	Bus_In[1] = #60000 1'b0;
	Bus_In[1] = #40000 1'b1;
	Bus_In[1] = #100000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #40000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #140000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #40000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #20000 1'b0;
	Bus_In[1] = #40000 1'b1;
	Bus_In[1] = #60000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #20000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #60000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #20000 1'b0;
	Bus_In[1] = #20000 1'b1;
	Bus_In[1] = #60000 1'b0;
end 
// Bus_In[ 0 ]
initial
begin
	Bus_In[0] = 1'b0;
	Bus_In[0] = #40000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #120000 1'b0;
	Bus_In[0] = #40000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #40000 1'b1;
	Bus_In[0] = #60000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #60000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #20000 1'b0;
	Bus_In[0] = #40000 1'b1;
	Bus_In[0] = #60000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #60000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #80000 1'b0;
	Bus_In[0] = #20000 1'b1;
	Bus_In[0] = #40000 1'b0;
end 

// Clk
always
begin
	Clk = 1'b0;
	Clk = #1000 1'b1;
	#1000;
end 

// Load_MDR
initial
begin
	Load_MDR = 1'b1;
	Load_MDR = #4000 1'b0;
end 

// Memory_WE
initial
begin
	Memory_WE = 1'b0;
	Memory_WE = #2000 1'b1;
	Memory_WE = #92000 1'b0;
end 

// Load_MAR
initial
begin
	Load_MAR = 1'b0;
	Load_MAR = #2000 1'b1;
	Load_MAR = #126000 1'b0;
end 
endmodule

